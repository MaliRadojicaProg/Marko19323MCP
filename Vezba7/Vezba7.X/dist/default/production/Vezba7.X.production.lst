

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Aug  1 22:16:00 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F2525
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 05/12/2024 GMT
    25                           ; 
    26                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F2525 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000FE0                     bsr             equ	4064
    59   000FE9                     fsr0            equ	4073
    60   000FEA                     fsr0h           equ	4074
    61   000FE9                     fsr0l           equ	4073
    62   000FE1                     fsr1            equ	4065
    63   000FE2                     fsr1h           equ	4066
    64   000FE1                     fsr1l           equ	4065
    65   000FD9                     fsr2            equ	4057
    66   000FDA                     fsr2h           equ	4058
    67   000FD9                     fsr2l           equ	4057
    68   000FEF                     indf0           equ	4079
    69   000FE7                     indf1           equ	4071
    70   000FDF                     indf2           equ	4063
    71   000FF2                     intcon          equ	4082
    72   000000                     nvmcon          equ	0
    73   000FF9                     pcl             equ	4089
    74   000FFA                     pclath          equ	4090
    75   000FFB                     pclatu          equ	4091
    76   000FEB                     plusw0          equ	4075
    77   000FE3                     plusw1          equ	4067
    78   000FDB                     plusw2          equ	4059
    79   000FED                     postdec0        equ	4077
    80   000FE5                     postdec1        equ	4069
    81   000FDD                     postdec2        equ	4061
    82   000FEE                     postinc0        equ	4078
    83   000FE6                     postinc1        equ	4070
    84   000FDE                     postinc2        equ	4062
    85   000FEC                     preinc0         equ	4076
    86   000FE4                     preinc1         equ	4068
    87   000FDC                     preinc2         equ	4060
    88   000FF3                     prod            equ	4083
    89   000FF4                     prodh           equ	4084
    90   000FF3                     prodl           equ	4083
    91   000FD8                     status          equ	4056
    92   000FF5                     tablat          equ	4085
    93   000FF6                     tblptr          equ	4086
    94   000FF7                     tblptrh         equ	4087
    95   000FF6                     tblptrl         equ	4086
    96   000FF8                     tblptru         equ	4088
    97   000FFD                     tosl            equ	4093
    98   000FE8                     wreg            equ	4072
    99   000F80                     PORTA           equ	3968	;# 
   100   000F81                     PORTB           equ	3969	;# 
   101   000F82                     PORTC           equ	3970	;# 
   102   000F84                     PORTE           equ	3972	;# 
   103   000F89                     LATA            equ	3977	;# 
   104   000F8A                     LATB            equ	3978	;# 
   105   000F8B                     LATC            equ	3979	;# 
   106   000F92                     TRISA           equ	3986	;# 
   107   000F92                     DDRA            equ	3986	;# 
   108   000F93                     TRISB           equ	3987	;# 
   109   000F93                     DDRB            equ	3987	;# 
   110   000F94                     TRISC           equ	3988	;# 
   111   000F94                     DDRC            equ	3988	;# 
   112   000F9B                     OSCTUNE         equ	3995	;# 
   113   000F9D                     PIE1            equ	3997	;# 
   114   000F9E                     PIR1            equ	3998	;# 
   115   000F9F                     IPR1            equ	3999	;# 
   116   000FA0                     PIE2            equ	4000	;# 
   117   000FA1                     PIR2            equ	4001	;# 
   118   000FA2                     IPR2            equ	4002	;# 
   119   000FA6                     EECON1          equ	4006	;# 
   120   000FA7                     EECON2          equ	4007	;# 
   121   000FA8                     EEDATA          equ	4008	;# 
   122   000FA9                     EEADR           equ	4009	;# 
   123   000FAA                     EEADRH          equ	4010	;# 
   124   000FAB                     RCSTA           equ	4011	;# 
   125   000FAB                     RCSTA1          equ	4011	;# 
   126   000FAC                     TXSTA           equ	4012	;# 
   127   000FAC                     TXSTA1          equ	4012	;# 
   128   000FAD                     TXREG           equ	4013	;# 
   129   000FAD                     TXREG1          equ	4013	;# 
   130   000FAE                     RCREG           equ	4014	;# 
   131   000FAE                     RCREG1          equ	4014	;# 
   132   000FAF                     SPBRG           equ	4015	;# 
   133   000FAF                     SPBRG1          equ	4015	;# 
   134   000FB0                     SPBRGH          equ	4016	;# 
   135   000FB1                     T3CON           equ	4017	;# 
   136   000FB2                     TMR3            equ	4018	;# 
   137   000FB2                     TMR3L           equ	4018	;# 
   138   000FB3                     TMR3H           equ	4019	;# 
   139   000FB4                     CMCON           equ	4020	;# 
   140   000FB5                     CVRCON          equ	4021	;# 
   141   000FB6                     ECCP1AS         equ	4022	;# 
   142   000FB6                     ECCPAS          equ	4022	;# 
   143   000FB7                     PWM1CON         equ	4023	;# 
   144   000FB7                     ECCP1DEL        equ	4023	;# 
   145   000FB8                     BAUDCON         equ	4024	;# 
   146   000FB8                     BAUDCTL         equ	4024	;# 
   147   000FBA                     CCP2CON         equ	4026	;# 
   148   000FBB                     CCPR2           equ	4027	;# 
   149   000FBB                     CCPR2L          equ	4027	;# 
   150   000FBC                     CCPR2H          equ	4028	;# 
   151   000FBD                     CCP1CON         equ	4029	;# 
   152   000FBE                     CCPR1           equ	4030	;# 
   153   000FBE                     CCPR1L          equ	4030	;# 
   154   000FBF                     CCPR1H          equ	4031	;# 
   155   000FC0                     ADCON2          equ	4032	;# 
   156   000FC1                     ADCON1          equ	4033	;# 
   157   000FC2                     ADCON0          equ	4034	;# 
   158   000FC3                     ADRES           equ	4035	;# 
   159   000FC3                     ADRESL          equ	4035	;# 
   160   000FC4                     ADRESH          equ	4036	;# 
   161   000FC5                     SSPCON2         equ	4037	;# 
   162   000FC6                     SSPCON1         equ	4038	;# 
   163   000FC7                     SSPSTAT         equ	4039	;# 
   164   000FC8                     SSPADD          equ	4040	;# 
   165   000FC9                     SSPBUF          equ	4041	;# 
   166   000FCA                     T2CON           equ	4042	;# 
   167   000FCB                     PR2             equ	4043	;# 
   168   000FCB                     MEMCON          equ	4043	;# 
   169   000FCC                     TMR2            equ	4044	;# 
   170   000FCD                     T1CON           equ	4045	;# 
   171   000FCE                     TMR1            equ	4046	;# 
   172   000FCE                     TMR1L           equ	4046	;# 
   173   000FCF                     TMR1H           equ	4047	;# 
   174   000FD0                     RCON            equ	4048	;# 
   175   000FD1                     WDTCON          equ	4049	;# 
   176   000FD2                     HLVDCON         equ	4050	;# 
   177   000FD2                     LVDCON          equ	4050	;# 
   178   000FD3                     OSCCON          equ	4051	;# 
   179   000FD5                     T0CON           equ	4053	;# 
   180   000FD6                     TMR0            equ	4054	;# 
   181   000FD6                     TMR0L           equ	4054	;# 
   182   000FD7                     TMR0H           equ	4055	;# 
   183   000FD8                     STATUS          equ	4056	;# 
   184   000FD9                     FSR2            equ	4057	;# 
   185   000FD9                     FSR2L           equ	4057	;# 
   186   000FDA                     FSR2H           equ	4058	;# 
   187   000FDB                     PLUSW2          equ	4059	;# 
   188   000FDC                     PREINC2         equ	4060	;# 
   189   000FDD                     POSTDEC2        equ	4061	;# 
   190   000FDE                     POSTINC2        equ	4062	;# 
   191   000FDF                     INDF2           equ	4063	;# 
   192   000FE0                     BSR             equ	4064	;# 
   193   000FE1                     FSR1            equ	4065	;# 
   194   000FE1                     FSR1L           equ	4065	;# 
   195   000FE2                     FSR1H           equ	4066	;# 
   196   000FE3                     PLUSW1          equ	4067	;# 
   197   000FE4                     PREINC1         equ	4068	;# 
   198   000FE5                     POSTDEC1        equ	4069	;# 
   199   000FE6                     POSTINC1        equ	4070	;# 
   200   000FE7                     INDF1           equ	4071	;# 
   201   000FE8                     WREG            equ	4072	;# 
   202   000FE9                     FSR0            equ	4073	;# 
   203   000FE9                     FSR0L           equ	4073	;# 
   204   000FEA                     FSR0H           equ	4074	;# 
   205   000FEB                     PLUSW0          equ	4075	;# 
   206   000FEC                     PREINC0         equ	4076	;# 
   207   000FED                     POSTDEC0        equ	4077	;# 
   208   000FEE                     POSTINC0        equ	4078	;# 
   209   000FEF                     INDF0           equ	4079	;# 
   210   000FF0                     INTCON3         equ	4080	;# 
   211   000FF1                     INTCON2         equ	4081	;# 
   212   000FF2                     INTCON          equ	4082	;# 
   213   000FF3                     PROD            equ	4083	;# 
   214   000FF3                     PRODL           equ	4083	;# 
   215   000FF4                     PRODH           equ	4084	;# 
   216   000FF5                     TABLAT          equ	4085	;# 
   217   000FF6                     TBLPTR          equ	4086	;# 
   218   000FF6                     TBLPTRL         equ	4086	;# 
   219   000FF7                     TBLPTRH         equ	4087	;# 
   220   000FF8                     TBLPTRU         equ	4088	;# 
   221   000FF9                     PCLAT           equ	4089	;# 
   222   000FF9                     PC              equ	4089	;# 
   223   000FF9                     PCL             equ	4089	;# 
   224   000FFA                     PCLATH          equ	4090	;# 
   225   000FFB                     PCLATU          equ	4091	;# 
   226   000FFC                     STKPTR          equ	4092	;# 
   227   000FFD                     TOS             equ	4093	;# 
   228   000FFD                     TOSL            equ	4093	;# 
   229   000FFE                     TOSH            equ	4094	;# 
   230   000FFF                     TOSU            equ	4095	;# 
   231   000F81                     _PORTBbits      set	3969
   232   000FF2                     _INTCONbits     set	4082
   233   000FAD                     _TXREG          set	4013
   234   000FC3                     _ADRESL         set	4035
   235   000FC4                     _ADRESH         set	4036
   236   000FC2                     _ADCON0bits     set	4034
   237   000F93                     _TRISBbits      set	3987
   238   000FCA                     _T2CON          set	4042
   239   000FBA                     _CCP2CON        set	4026
   240   000FBB                     _CCPR2L         set	4027
   241   000FCB                     _PR2            set	4043
   242   000F9D                     _PIE1           set	3997
   243   000FF1                     _INTCON2        set	4081
   244   000FF2                     _INTCON         set	4082
   245   000FD6                     _TMR0L          set	4054
   246   000FD7                     _TMR0H          set	4055
   247   000FD5                     _T0CON          set	4053
   248   000FC2                     _ADCON0         set	4034
   249   000FC0                     _ADCON2         set	4032
   250   000FC1                     _ADCON1         set	4033
   251   000F82                     _PORTC          set	3970
   252   000F94                     _TRISC          set	3988
   253   000F81                     _PORTB          set	3969
   254   000F93                     _TRISB          set	3987
   255   000F80                     _PORTA          set	3968
   256   000F92                     _TRISA          set	3986
   257   000FAB                     _RCSTA          set	4011
   258   000FB8                     _BAUDCONbits    set	4024
   259   000FAC                     _TXSTAbits      set	4012
   260   000FAF                     _SPBRG          set	4015
   261   000F94                     _TRISCbits      set	3988
   262                           
   263                           ; #config settings
   264                           
   265                           	psect	cinit
   266   0011D4                     __pcinit:
   267                           	callstack 0
   268   0011D4                     start_initialization:
   269                           	callstack 0
   270   0011D4                     __initialization:
   271                           	callstack 0
   272                           
   273                           ; Clear objects allocated to COMRAM (20 bytes)
   274   0011D4  EE00  F001         	lfsr	0,__pbssCOMRAM
   275   0011D8  0E14               	movlw	20
   276   0011DA                     clear_0:
   277   0011DA  6AEE               	clrf	postinc0,c
   278   0011DC  06E8               	decf	wreg,f,c
   279   0011DE  E1FD               	bnz	clear_0
   280   0011E0                     end_of_initialization:
   281                           	callstack 0
   282   0011E0                     __end_of__initialization:
   283                           	callstack 0
   284   0011E0  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   285   0011E2  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   286   0011E4  0100               	movlb	0
   287   0011E6  EF01  F008         	goto	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMRAM
   290   000001                     __pbssCOMRAM:
   291                           	callstack 0
   292   000001                     _ByteX:
   293                           	callstack 0
   294   000001                     	ds	14
   295   00000F                     _result_RESP:
   296                           	callstack 0
   297   00000F                     	ds	2
   298   000011                     _result_ECG:
   299                           	callstack 0
   300   000011                     	ds	2
   301   000013                     _cntTimer:
   302                           	callstack 0
   303   000013                     	ds	1
   304   000014                     _Flag_4ms:
   305                           	callstack 0
   306   000014                     	ds	1
   307                           
   308                           	psect	cstackCOMRAM
   309   000015                     __pcstackCOMRAM:
   310                           	callstack 0
   311   000015                     ??_ISR:
   312                           
   313                           ; 1 bytes @ 0x0
   314   000015                     	ds	3
   315   000018                     ?_konvertovanje:
   316                           	callstack 0
   317   000018                     transmit_data@data_8b:
   318                           	callstack 0
   319   000018                     init_vars@i:
   320                           	callstack 0
   321   000018                     
   322                           ; 1 bytes @ 0x3
   323   000018                     	ds	1
   324   000019                     ??_pakIsl:
   325                           
   326                           ; 1 bytes @ 0x4
   327   000019                     	ds	1
   328   00001A                     pakIsl@D1:
   329                           	callstack 0
   330   00001A                     ??_konvertovanje:
   331                           
   332                           ; 1 bytes @ 0x5
   333   00001A                     	ds	2
   334   00001C                     konvertovanje@kanal:
   335                           	callstack 0
   336   00001C                     pakIsl@Resp:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x7
   340   00001C                     	ds	2
   341   00001E                     pakIsl@i:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x9
   345   00001E                     	ds	2
   346   000020                     
   347                           ; 1 bytes @ 0xB
   348 ;;
   349 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   350 ;;
   351 ;; *************** function _main *****************
   352 ;; Defined at:
   353 ;;		line 192 in file "main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;Total ram usage:        0 bytes
   372 ;; Hardware stack levels required when called: 3
   373 ;; This function calls:
   374 ;;		_init
   375 ;;		_init_pwm
   376 ;;		_init_vars
   377 ;;		_konvertovanje
   378 ;;		_pakIsl
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text0
   385   001002                     __ptext0:
   386                           	callstack 0
   387   001002                     _main:
   388                           	callstack 28
   389   001002                     
   390                           ;main.c: 193:     init_vars();
   391   001002  ECC1  F008         	call	_init_vars	;wreg free
   392   001006                     
   393                           ;main.c: 194:     init();
   394   001006  EC86  F008         	call	_init	;wreg free
   395   00100A                     
   396                           ;main.c: 195:     init_pwm();
   397   00100A  EC00  F009         	call	_init_pwm	;wreg free
   398   00100E                     l933:
   399                           
   400                           ;main.c: 198:         if((cntTimer > 0) && (cntTimer < 10)) PORTBbits.RB0 = 1;
   401   00100E  5013               	movf	_cntTimer^0,w,c
   402   001010  B4D8               	btfsc	status,2,c
   403   001012  EF0D  F008         	goto	u131
   404   001016  EF0F  F008         	goto	u130
   405   00101A                     u131:
   406   00101A  EF1A  F008         	goto	l117
   407   00101E                     u130:
   408   00101E  0E0A               	movlw	10
   409   001020  6013               	cpfslt	_cntTimer^0,c
   410   001022  EF15  F008         	goto	u141
   411   001026  EF17  F008         	goto	u140
   412   00102A                     u141:
   413   00102A  EF1A  F008         	goto	l117
   414   00102E                     u140:
   415   00102E  8081               	bsf	129,0,c	;volatile
   416   001030  EF1B  F008         	goto	l939
   417   001034                     l117:
   418   001034  9081               	bcf	129,0,c	;volatile
   419   001036                     l939:
   420                           
   421                           ;main.c: 201:         if(Flag_4ms == 1){
   422   001036  0414               	decf	_Flag_4ms^0,w,c
   423   001038  A4D8               	btfss	status,2,c
   424   00103A  EF21  F008         	goto	u151
   425   00103E  EF23  F008         	goto	u150
   426   001042                     u151:
   427   001042  EF07  F008         	goto	l933
   428   001046                     u150:
   429   001046                     
   430                           ;main.c: 202:             Flag_4ms = 0;
   431   001046  6A14               	clrf	_Flag_4ms^0,c
   432                           
   433                           ;main.c: 203:             if(PORTBbits.RB4 == 1) cntTimer = 100;
   434   001048  A881               	btfss	129,4,c	;volatile
   435   00104A  EF29  F008         	goto	u161
   436   00104E  EF2B  F008         	goto	u160
   437   001052                     u161:
   438   001052  EF2F  F008         	goto	l945
   439   001056                     u160:
   440   001056  0E64               	movlw	100
   441   001058  6E13               	movwf	_cntTimer^0,c
   442   00105A  EF38  F008         	goto	l949
   443   00105E                     l945:
   444   00105E  5013               	movf	_cntTimer^0,w,c
   445   001060  B4D8               	btfsc	status,2,c
   446   001062  EF35  F008         	goto	u171
   447   001066  EF37  F008         	goto	u170
   448   00106A                     u171:
   449   00106A  EF38  F008         	goto	l949
   450   00106E                     u170:
   451   00106E  0613               	decf	_cntTimer^0,f,c
   452   001070                     l949:
   453                           
   454                           ;main.c: 205:             result_ECG = konvertovanje(0);
   455   001070  0E00               	movlw	0
   456   001072  ECA4  F008         	call	_konvertovanje
   457   001076  C018  F011         	movff	?_konvertovanje,_result_ECG
   458   00107A  C019  F012         	movff	?_konvertovanje+1,_result_ECG+1
   459   00107E                     
   460                           ;main.c: 206:             result_RESP = konvertovanje(1);
   461   00107E  0E01               	movlw	1
   462   001080  ECA4  F008         	call	_konvertovanje
   463   001084  C018  F00F         	movff	?_konvertovanje,_result_RESP
   464   001088  C019  F010         	movff	?_konvertovanje+1,_result_RESP+1
   465   00108C                     
   466                           ;main.c: 207:             pakIsl();
   467   00108C  EC4C  F008         	call	_pakIsl	;wreg free
   468   001090  EF07  F008         	goto	l933
   469   001094  EF30  F000         	goto	start
   470   001098                     __end_of_main:
   471                           	callstack 0
   472                           
   473 ;; *************** function _pakIsl *****************
   474 ;; Defined at:
   475 ;;		line 164 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  i               2    9[COMRAM] int 
   480 ;;  Resp            2    7[COMRAM] int 
   481 ;;  D1              2    5[COMRAM] int 
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;Total ram usage:        7 bytes
   496 ;; Hardware stack levels used: 1
   497 ;; Hardware stack levels required when called: 2
   498 ;; This function calls:
   499 ;;		_transmit_data
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text1
   506   001098                     __ptext1:
   507                           	callstack 0
   508   001098                     _pakIsl:
   509                           	callstack 28
   510   001098                     
   511                           ;main.c: 168:     int Resp = 0;
   512   001098  0E00               	movlw	0
   513   00109A  6E1D               	movwf	(pakIsl@Resp+1)^0,c
   514   00109C  0E00               	movlw	0
   515   00109E  6E1C               	movwf	pakIsl@Resp^0,c
   516   0010A0                     
   517                           ;main.c: 170:     D1 = result_ECG;
   518   0010A0  C011  F01A         	movff	_result_ECG,pakIsl@D1
   519   0010A4  C012  F01B         	movff	_result_ECG+1,pakIsl@D1+1
   520   0010A8                     
   521                           ;main.c: 171:     Resp = result_RESP;
   522   0010A8  C00F  F01C         	movff	_result_RESP,pakIsl@Resp
   523   0010AC  C010  F01D         	movff	_result_RESP+1,pakIsl@Resp+1
   524                           
   525                           ;main.c: 172:     ByteX[0]=0xAA;
   526   0010B0  0EAA               	movlw	170
   527   0010B2  6E01               	movwf	_ByteX^0,c
   528   0010B4                     
   529                           ;main.c: 173:     ByteX[5]=D1<<6;
   530   0010B4  401A               	rrncf	pakIsl@D1^0,w,c
   531   0010B6  42E8               	rrncf	wreg,f,c
   532   0010B8  0BC0               	andlw	192
   533   0010BA  6E06               	movwf	(_ByteX+5)^0,c
   534   0010BC                     
   535                           ;main.c: 174:     ByteX[7]=D1<<14;
   536   0010BC  6A08               	clrf	(_ByteX+7)^0,c
   537   0010BE                     
   538                           ;main.c: 175:     ByteX[9]=Resp<<6;
   539   0010BE  401C               	rrncf	pakIsl@Resp^0,w,c
   540   0010C0  42E8               	rrncf	wreg,f,c
   541   0010C2  0BC0               	andlw	192
   542   0010C4  6E0A               	movwf	(_ByteX+9)^0,c
   543   0010C6                     
   544                           ;main.c: 176:     ByteX[10]=(Resp & 0x03)<<4;
   545   0010C6  C01C  F019         	movff	pakIsl@Resp,??_pakIsl
   546   0010CA  0E03               	movlw	3
   547   0010CC  1619               	andwf	??_pakIsl^0,f,c
   548   0010CE  3819               	swapf	??_pakIsl^0,w,c
   549   0010D0  0BF0               	andlw	240
   550   0010D2  6E0B               	movwf	(_ByteX+10)^0,c
   551   0010D4                     
   552                           ;main.c: 178:     for (int i = 0; i <= 13; i++)
   553   0010D4  0E00               	movlw	0
   554   0010D6  6E1F               	movwf	(pakIsl@i+1)^0,c
   555   0010D8  0E00               	movlw	0
   556   0010DA  6E1E               	movwf	pakIsl@i^0,c
   557   0010DC                     l875:
   558                           
   559                           ;main.c: 179:         transmit_data(ByteX[i]);
   560   0010DC  501E               	movf	pakIsl@i^0,w,c
   561   0010DE  0F01               	addlw	low _ByteX
   562   0010E0  6ED9               	movwf	fsr2l,c
   563   0010E2  6ADA               	clrf	fsr2h,c
   564   0010E4  50DF               	movf	indf2,w,c
   565   0010E6  ECF5  F008         	call	_transmit_data
   566   0010EA  4A1E               	infsnz	pakIsl@i^0,f,c
   567   0010EC  2A1F               	incf	(pakIsl@i+1)^0,f,c
   568   0010EE  BE1F               	btfsc	(pakIsl@i+1)^0,7,c
   569   0010F0  EF83  F008         	goto	u41
   570   0010F4  501F               	movf	(pakIsl@i+1)^0,w,c
   571   0010F6  E109               	bnz	u40
   572   0010F8  0E0E               	movlw	14
   573   0010FA  5C1E               	subwf	pakIsl@i^0,w,c
   574   0010FC  A0D8               	btfss	status,0,c
   575   0010FE  EF83  F008         	goto	u41
   576   001102  EF85  F008         	goto	u40
   577   001106                     u41:
   578   001106  EF6E  F008         	goto	l875
   579   00110A                     u40:
   580   00110A  0012               	return		;funcret
   581   00110C                     __end_of_pakIsl:
   582                           	callstack 0
   583                           
   584 ;; *************** function _transmit_data *****************
   585 ;; Defined at:
   586 ;;		line 159 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  data_8b         1    wreg     unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  data_8b         1    3[COMRAM] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;Total ram usage:        1 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_pakIsl
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text2
   615   0011EA                     __ptext2:
   616                           	callstack 0
   617   0011EA                     _transmit_data:
   618                           	callstack 28
   619                           
   620                           ;incstack = 0
   621                           ;transmit_data@data_8b stored from wreg
   622   0011EA  6E18               	movwf	transmit_data@data_8b^0,c
   623   0011EC                     
   624                           ;main.c: 160:     TXREG = data_8b;
   625   0011EC  C018  FFAD         	movff	transmit_data@data_8b,4013	;volatile
   626   0011F0                     l97:
   627   0011F0  A2AC               	btfss	172,1,c	;volatile
   628   0011F2  EFFD  F008         	goto	u11
   629   0011F6  EFFF  F008         	goto	u10
   630   0011FA                     u11:
   631   0011FA  EFF8  F008         	goto	l97
   632   0011FE                     u10:
   633   0011FE  0012               	return		;funcret
   634   001200                     __end_of_transmit_data:
   635                           	callstack 0
   636                           
   637 ;; *************** function _konvertovanje *****************
   638 ;; Defined at:
   639 ;;		line 147 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  kanal           1    wreg     unsigned char 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  kanal           1    7[COMRAM] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  2    3[COMRAM] int 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;Total ram usage:        5 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; Hardware stack levels required when called: 1
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text3
   668   001148                     __ptext3:
   669                           	callstack 0
   670   001148                     _konvertovanje:
   671                           	callstack 29
   672                           
   673                           ;incstack = 0
   674                           ;konvertovanje@kanal stored from wreg
   675   001148  6E1C               	movwf	konvertovanje@kanal^0,c
   676   00114A                     
   677                           ;main.c: 151:     ADCON0=0x01 | (kanal <<2);
   678   00114A  441C               	rlncf	konvertovanje@kanal^0,w,c
   679   00114C  46E8               	rlncf	wreg,f,c
   680   00114E  0BFC               	andlw	252
   681   001150  0901               	iorlw	1
   682   001152  6EC2               	movwf	194,c	;volatile
   683   001154                     
   684                           ;main.c: 152:     _delay((unsigned long)((2.4)*(25000000/4000000.0)));
   685   001154  0E05               	movlw	5
   686   001156                     u187:
   687   001156  2EE8               	decfsz	wreg,f,c
   688   001158  D7FE               	bra	u187
   689   00115A                     
   690                           ;main.c: 153:     ADCON0bits.GO_DONE=1;
   691   00115A  82C2               	bsf	194,1,c	;volatile
   692   00115C                     l91:
   693   00115C  B2C2               	btfsc	194,1,c	;volatile
   694   00115E  EFB3  F008         	goto	u121
   695   001162  EFB5  F008         	goto	u120
   696   001166                     u121:
   697   001166  EFAE  F008         	goto	l91
   698   00116A                     u120:
   699   00116A                     
   700                           ;main.c: 155:     return (ADRESH<<8|ADRESL);
   701   00116A  50C3               	movf	195,w,c	;volatile
   702   00116C  CFC4 F01A          	movff	4036,??_konvertovanje	;volatile
   703   001170  6A1B               	clrf	(??_konvertovanje+1)^0,c
   704   001172  C01A  F01B         	movff	??_konvertovanje,??_konvertovanje+1
   705   001176  6A1A               	clrf	??_konvertovanje^0,c
   706   001178  101A               	iorwf	??_konvertovanje^0,w,c
   707   00117A  6E18               	movwf	?_konvertovanje^0,c
   708   00117C  501B               	movf	(??_konvertovanje+1)^0,w,c
   709   00117E  6E19               	movwf	(?_konvertovanje+1)^0,c
   710   001180  0012               	return		;funcret
   711   001182                     __end_of_konvertovanje:
   712                           	callstack 0
   713                           
   714 ;; *************** function _init_vars *****************
   715 ;; Defined at:
   716 ;;		line 80 in file "main.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  i               2    3[COMRAM] int 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;Total ram usage:        2 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text4
   745   001182                     __ptext4:
   746                           	callstack 0
   747   001182                     _init_vars:
   748                           	callstack 29
   749   001182                     
   750                           ;main.c: 81:     for(int i = 0; i < 14; i++)
   751   001182  0E00               	movlw	0
   752   001184  6E19               	movwf	(init_vars@i+1)^0,c
   753   001186  0E00               	movlw	0
   754   001188  6E18               	movwf	init_vars@i^0,c
   755   00118A                     l825:
   756                           
   757                           ;main.c: 82:         ByteX[i] = 0;
   758   00118A  5018               	movf	init_vars@i^0,w,c
   759   00118C  0F01               	addlw	low _ByteX
   760   00118E  6ED9               	movwf	fsr2l,c
   761   001190  6ADA               	clrf	fsr2h,c
   762   001192  6ADF               	clrf	indf2,c
   763   001194  4A18               	infsnz	init_vars@i^0,f,c
   764   001196  2A19               	incf	(init_vars@i+1)^0,f,c
   765   001198  BE19               	btfsc	(init_vars@i+1)^0,7,c
   766   00119A  EFD8  F008         	goto	u21
   767   00119E  5019               	movf	(init_vars@i+1)^0,w,c
   768   0011A0  E109               	bnz	u20
   769   0011A2  0E0E               	movlw	14
   770   0011A4  5C18               	subwf	init_vars@i^0,w,c
   771   0011A6  A0D8               	btfss	status,0,c
   772   0011A8  EFD8  F008         	goto	u21
   773   0011AC  EFDA  F008         	goto	u20
   774   0011B0                     u21:
   775   0011B0  EFC5  F008         	goto	l825
   776   0011B4                     u20:
   777   0011B4                     
   778                           ;main.c: 83:     ByteX[0] = 0xAA;
   779   0011B4  0EAA               	movlw	170
   780   0011B6  6E01               	movwf	_ByteX^0,c
   781   0011B8  0012               	return		;funcret
   782   0011BA                     __end_of_init_vars:
   783                           	callstack 0
   784                           
   785 ;; *************** function _init_pwm *****************
   786 ;; Defined at:
   787 ;;		line 135 in file "main.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; Hardware stack levels required when called: 1
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text5
   816   001200                     __ptext5:
   817                           	callstack 0
   818   001200                     _init_pwm:
   819                           	callstack 29
   820   001200                     
   821                           ;main.c: 137:     PR2 = 61;
   822   001200  0E3D               	movlw	61
   823   001202  6ECB               	movwf	203,c	;volatile
   824                           
   825                           ;main.c: 139:     CCPR2L = 0x1F;
   826   001204  0E1F               	movlw	31
   827   001206  6EBB               	movwf	187,c	;volatile
   828                           
   829                           ;main.c: 140:     CCP2CON = 0b00011100;
   830   001208  0E1C               	movlw	28
   831   00120A  6EBA               	movwf	186,c	;volatile
   832                           
   833                           ;main.c: 141:     T2CON = 0x04;
   834   00120C  0E04               	movlw	4
   835   00120E  6ECA               	movwf	202,c	;volatile
   836   001210                     
   837                           ;main.c: 143:     TRISBbits.RB3 = 0;
   838   001210  9693               	bcf	147,3,c	;volatile
   839   001212  0012               	return		;funcret
   840   001214                     __end_of_init_pwm:
   841                           	callstack 0
   842                           
   843 ;; *************** function _init *****************
   844 ;; Defined at:
   845 ;;		line 109 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 2
   866 ;; This function calls:
   867 ;;		_UART_Init
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text6
   874   00110C                     __ptext6:
   875                           	callstack 0
   876   00110C                     _init:
   877                           	callstack 28
   878   00110C                     
   879                           ;main.c: 111:     TRISA = 0x03;
   880   00110C  0E03               	movlw	3
   881   00110E  6E92               	movwf	146,c	;volatile
   882   001110                     
   883                           ;main.c: 112:     PORTA = 0xFF;
   884   001110  6880               	setf	128,c	;volatile
   885                           
   886                           ;main.c: 114:     TRISB = 0b00110010;
   887   001112  0E32               	movlw	50
   888   001114  6E93               	movwf	147,c	;volatile
   889                           
   890                           ;main.c: 115:     PORTB = 0xF0;
   891   001116  0EF0               	movlw	240
   892   001118  6E81               	movwf	129,c	;volatile
   893                           
   894                           ;main.c: 117:     TRISC = 0b11010000;
   895   00111A  0ED0               	movlw	208
   896   00111C  6E94               	movwf	148,c	;volatile
   897   00111E                     
   898                           ;main.c: 118:     PORTC = 0xFF;
   899   00111E  6882               	setf	130,c	;volatile
   900                           
   901                           ;main.c: 120:     ADCON1 = 0x0D;
   902   001120  0E0D               	movlw	13
   903   001122  6EC1               	movwf	193,c	;volatile
   904                           
   905                           ;main.c: 121:     ADCON2 = 0b10101110;
   906   001124  0EAE               	movlw	174
   907   001126  6EC0               	movwf	192,c	;volatile
   908                           
   909                           ;main.c: 122:     ADCON0 = 0x01;
   910   001128  0E01               	movlw	1
   911   00112A  6EC2               	movwf	194,c	;volatile
   912                           
   913                           ;main.c: 124:     T0CON = 0b10000100;
   914   00112C  0E84               	movlw	132
   915   00112E  6ED5               	movwf	213,c	;volatile
   916                           
   917                           ;main.c: 125:     TMR0H = 0xFC;
   918   001130  0EFC               	movlw	252
   919   001132  6ED7               	movwf	215,c	;volatile
   920                           
   921                           ;main.c: 126:     TMR0L = 0xF3;
   922   001134  0EF3               	movlw	243
   923   001136  6ED6               	movwf	214,c	;volatile
   924                           
   925                           ;main.c: 128:     INTCON = 0b10100000;
   926   001138  0EA0               	movlw	160
   927   00113A  6EF2               	movwf	242,c	;volatile
   928                           
   929                           ;main.c: 129:     INTCON2 = 0b10000100;
   930   00113C  0E84               	movlw	132
   931   00113E  6EF1               	movwf	241,c	;volatile
   932   001140                     
   933                           ;main.c: 131:     PIE1 = 0x00;
   934   001140  6A9D               	clrf	157,c	;volatile
   935   001142                     
   936                           ;main.c: 132:     UART_Init();
   937   001142  ECDD  F008         	call	_UART_Init	;wreg free
   938   001146  0012               	return		;funcret
   939   001148                     __end_of_init:
   940                           	callstack 0
   941                           
   942 ;; *************** function _UART_Init *****************
   943 ;; Defined at:
   944 ;;		line 86 in file "main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, status,2
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_init
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text7
   973   0011BA                     __ptext7:
   974                           	callstack 0
   975   0011BA                     _UART_Init:
   976                           	callstack 28
   977   0011BA                     
   978                           ;main.c: 87:     TRISCbits.RC6 = 1;
   979   0011BA  8C94               	bsf	148,6,c	;volatile
   980                           
   981                           ;main.c: 88:     TRISCbits.RC7 = 1;
   982   0011BC  8E94               	bsf	148,7,c	;volatile
   983   0011BE                     
   984                           ;main.c: 91:     SPBRG = 49;
   985   0011BE  0E31               	movlw	49
   986   0011C0  6EAF               	movwf	175,c	;volatile
   987   0011C2                     
   988                           ;main.c: 93:     TXSTAbits.CSRC = 0;
   989   0011C2  9EAC               	bcf	172,7,c	;volatile
   990   0011C4                     
   991                           ;main.c: 95:     TXSTAbits.TX9 = 0;
   992   0011C4  9CAC               	bcf	172,6,c	;volatile
   993   0011C6                     
   994                           ;main.c: 97:     TXSTAbits.TXEN = 1;
   995   0011C6  8AAC               	bsf	172,5,c	;volatile
   996   0011C8                     
   997                           ;main.c: 99:     TXSTAbits.SYNC = 0;
   998   0011C8  98AC               	bcf	172,4,c	;volatile
   999   0011CA                     
  1000                           ;main.c: 101:     TXSTAbits.BRGH = 1;
  1001   0011CA  84AC               	bsf	172,2,c	;volatile
  1002   0011CC                     
  1003                           ;main.c: 103:     BAUDCONbits.BRG16 = 1;
  1004   0011CC  86B8               	bsf	184,3,c	;volatile
  1005                           
  1006                           ;main.c: 105:     RCSTA = 0x90;
  1007   0011CE  0E90               	movlw	144
  1008   0011D0  6EAB               	movwf	171,c	;volatile
  1009   0011D2  0012               	return		;funcret
  1010   0011D4                     __end_of_UART_Init:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _ISR *****************
  1014 ;; Defined at:
  1015 ;;		line 182 in file "main.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;Total ram usage:        3 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		Interrupt level 1
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	intcodelo
  1043   000018                     __pintcodelo:
  1044                           	callstack 0
  1045   000018                     _ISR:
  1046                           	callstack 28
  1047                           
  1048                           ;incstack = 0
  1049   000018  8020               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1050   00001A  CFD8 F015          	movff	status,??_ISR
  1051   00001E  CFE8 F016          	movff	wreg,??_ISR+1
  1052   000022  CFE0 F017          	movff	bsr,??_ISR+2
  1053   000026                     
  1054                           ;main.c: 183:     if((INTCONbits.TMR0IE == 1) && (INTCONbits.TMR0IF == 1)){
  1055   000026  AAF2               	btfss	242,5,c	;volatile
  1056   000028  EF18  F000         	goto	i1u5_21
  1057   00002C  EF1A  F000         	goto	i1u5_20
  1058   000030                     i1u5_21:
  1059   000030  EF28  F000         	goto	i1l111
  1060   000034                     i1u5_20:
  1061   000034  A4F2               	btfss	242,2,c	;volatile
  1062   000036  EF1F  F000         	goto	i1u6_21
  1063   00003A  EF21  F000         	goto	i1u6_20
  1064   00003E                     i1u6_21:
  1065   00003E  EF28  F000         	goto	i1l111
  1066   000042                     i1u6_20:
  1067   000042                     
  1068                           ;main.c: 184:        INTCONbits.TMR0IF = 0;
  1069   000042  94F2               	bcf	242,2,c	;volatile
  1070   000044                     
  1071                           ;main.c: 185:        Flag_4ms = 1;
  1072   000044  0E01               	movlw	1
  1073   000046  6E14               	movwf	_Flag_4ms^0,c
  1074                           
  1075                           ;main.c: 186:        TMR0H = 0xFC;
  1076   000048  0EFC               	movlw	252
  1077   00004A  6ED7               	movwf	215,c	;volatile
  1078                           
  1079                           ;main.c: 187:        TMR0L = 0xF3;
  1080   00004C  0EF3               	movlw	243
  1081   00004E  6ED6               	movwf	214,c	;volatile
  1082   000050                     i1l111:
  1083   000050  C017  FFE0         	movff	??_ISR+2,bsr
  1084   000054  C016  FFE8         	movff	??_ISR+1,wreg
  1085   000058  C015  FFD8         	movff	??_ISR,status
  1086   00005C  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1087   00005E  0010               	retfie	
  1088   000060                     __end_of_ISR:
  1089                           	callstack 0
  1090                           
  1091                           	psect	smallconst
  1092   001000                     __psmallconst:
  1093                           	callstack 0
  1094   001000  00                 	db	0
  1095   001001  00                 	db	0	; dummy byte at the end
  1096   001000                     __smallconst    set	__psmallconst
  1097   001000                     __mediumconst   set	__psmallconst
  1098   000000                     __activetblptr  equ	0
  1099                           
  1100                           	psect	rparam
  1101   000001                     ___rparam_used  equ	1
  1102   000000                     ___param_bank   equ	0
  1103   000000                     __Lparam        equ	__Lrparam
  1104   000000                     __Hparam        equ	__Hrparam
  1105                           
  1106                           	psect	temp
  1107   000020                     btemp:
  1108                           	callstack 0
  1109   000020                     	ds	1
  1110   000020                     int$flags       set	btemp
  1111   000021                     wtemp8          set	btemp+1
  1112   000021                     ttemp5          set	btemp+1
  1113   000024                     ttemp6          set	btemp+4
  1114   000028                     ttemp7          set	btemp+8
  1115                           
  1116                           	psect	idloc
  1117                           
  1118                           ;Config register IDLOC0 @ 0x200000
  1119                           ;	unspecified, using default values
  1120   200000                     	org	2097152
  1121   200000  FF                 	db	255
  1122                           
  1123                           ;Config register IDLOC1 @ 0x200001
  1124                           ;	unspecified, using default values
  1125   200001                     	org	2097153
  1126   200001  FF                 	db	255
  1127                           
  1128                           ;Config register IDLOC2 @ 0x200002
  1129                           ;	unspecified, using default values
  1130   200002                     	org	2097154
  1131   200002  FF                 	db	255
  1132                           
  1133                           ;Config register IDLOC3 @ 0x200003
  1134                           ;	unspecified, using default values
  1135   200003                     	org	2097155
  1136   200003  FF                 	db	255
  1137                           
  1138                           ;Config register IDLOC4 @ 0x200004
  1139                           ;	unspecified, using default values
  1140   200004                     	org	2097156
  1141   200004  FF                 	db	255
  1142                           
  1143                           ;Config register IDLOC5 @ 0x200005
  1144                           ;	unspecified, using default values
  1145   200005                     	org	2097157
  1146   200005  FF                 	db	255
  1147                           
  1148                           ;Config register IDLOC6 @ 0x200006
  1149                           ;	unspecified, using default values
  1150   200006                     	org	2097158
  1151   200006  FF                 	db	255
  1152                           
  1153                           ;Config register IDLOC7 @ 0x200007
  1154                           ;	unspecified, using default values
  1155   200007                     	org	2097159
  1156   200007  FF                 	db	255
  1157                           
  1158                           	psect	config
  1159                           
  1160                           ; Padding undefined space
  1161   300000                     	org	3145728
  1162   300000  FF                 	db	255
  1163                           
  1164                           ;Config register CONFIG1H @ 0x300001
  1165                           ;	Oscillator Selection bits
  1166                           ;	OSC = HS, HS oscillator
  1167                           ;	Fail-Safe Clock Monitor Enable bit
  1168                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1169                           ;	Internal/External Oscillator Switchover bit
  1170                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1171   300001                     	org	3145729
  1172   300001  02                 	db	2
  1173                           
  1174                           ;Config register CONFIG2L @ 0x300002
  1175                           ;	Power-up Timer Enable bit
  1176                           ;	PWRT = OFF, PWRT disabled
  1177                           ;	Brown-out Reset Enable bits
  1178                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1179                           ;	Brown Out Reset Voltage bits
  1180                           ;	BORV = 3, Minimum setting
  1181   300002                     	org	3145730
  1182   300002  19                 	db	25
  1183                           
  1184                           ;Config register CONFIG2H @ 0x300003
  1185                           ;	Watchdog Timer Enable bit
  1186                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1187                           ;	Watchdog Timer Postscale Select bits
  1188                           ;	WDTPS = 32768, 1:32768
  1189   300003                     	org	3145731
  1190   300003  1E                 	db	30
  1191                           
  1192                           ; Padding undefined space
  1193   300004                     	org	3145732
  1194   300004  FF                 	db	255
  1195                           
  1196                           ;Config register CONFIG3H @ 0x300005
  1197                           ;	CCP2 MUX bit
  1198                           ;	CCP2MX = 0x0, user specified literal
  1199                           ;	PORTB A/D Enable bit
  1200                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1201                           ;	Low-Power Timer1 Oscillator Enable bit
  1202                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1203                           ;	MCLR Pin Enable bit
  1204                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1205   300005                     	org	3145733
  1206   300005  00                 	db	0
  1207                           
  1208                           ;Config register CONFIG4L @ 0x300006
  1209                           ;	Stack Full/Underflow Reset Enable bit
  1210                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1211                           ;	Single-Supply ICSP Enable bit
  1212                           ;	LVP = OFF, Single-Supply ICSP disabled
  1213                           ;	Extended Instruction Set Enable bit
  1214                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1215                           ;	Background Debugger Enable bit
  1216                           ;	DEBUG = 0x1, unprogrammed default
  1217   300006                     	org	3145734
  1218   300006  80                 	db	128
  1219                           
  1220                           ; Padding undefined space
  1221   300007                     	org	3145735
  1222   300007  FF                 	db	255
  1223                           
  1224                           ;Config register CONFIG5L @ 0x300008
  1225                           ;	Code Protection bit
  1226                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1227                           ;	Code Protection bit
  1228                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1229                           ;	Code Protection bit
  1230                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1231   300008                     	org	3145736
  1232   300008  0F                 	db	15
  1233                           
  1234                           ;Config register CONFIG5H @ 0x300009
  1235                           ;	Boot Block Code Protection bit
  1236                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1237                           ;	Data EEPROM Code Protection bit
  1238                           ;	CPD = OFF, Data EEPROM not code-protected
  1239   300009                     	org	3145737
  1240   300009  C0                 	db	192
  1241                           
  1242                           ;Config register CONFIG6L @ 0x30000A
  1243                           ;	Write Protection bit
  1244                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1245                           ;	Write Protection bit
  1246                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1247                           ;	Write Protection bit
  1248                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1249   30000A                     	org	3145738
  1250   30000A  0F                 	db	15
  1251                           
  1252                           ;Config register CONFIG6H @ 0x30000B
  1253                           ;	Configuration Register Write Protection bit
  1254                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1255                           ;	Boot Block Write Protection bit
  1256                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1257                           ;	Data EEPROM Write Protection bit
  1258                           ;	WRTD = OFF, Data EEPROM not write-protected
  1259   30000B                     	org	3145739
  1260   30000B  E0                 	db	224
  1261                           
  1262                           ;Config register CONFIG7L @ 0x30000C
  1263                           ;	Table Read Protection bit
  1264                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1265                           ;	Table Read Protection bit
  1266                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1267                           ;	Table Read Protection bit
  1268                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1269   30000C                     	org	3145740
  1270   30000C  0F                 	db	15
  1271                           
  1272                           ;Config register CONFIG7H @ 0x30000D
  1273                           ;	Boot Block Table Read Protection bit
  1274                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1275   30000D                     	org	3145741
  1276   30000D  40                 	db	64
  1277                           tosu	equ	0xFFF
  1278                           tosh	equ	0xFFE
  1279                           tosl	equ	0xFFD
  1280                           stkptr	equ	0xFFC
  1281                           pclatu	equ	0xFFB
  1282                           pclath	equ	0xFFA
  1283                           pcl	equ	0xFF9
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           prodh	equ	0xFF4
  1289                           prodl	equ	0xFF3
  1290                           indf0	equ	0xFEF
  1291                           postinc0	equ	0xFEE
  1292                           postdec0	equ	0xFED
  1293                           preinc0	equ	0xFEC
  1294                           plusw0	equ	0xFEB
  1295                           fsr0h	equ	0xFEA
  1296                           fsr0l	equ	0xFE9
  1297                           wreg	equ	0xFE8
  1298                           indf1	equ	0xFE7
  1299                           postinc1	equ	0xFE6
  1300                           postdec1	equ	0xFE5
  1301                           preinc1	equ	0xFE4
  1302                           plusw1	equ	0xFE3
  1303                           fsr1h	equ	0xFE2
  1304                           fsr1l	equ	0xFE1
  1305                           bsr	equ	0xFE0
  1306                           indf2	equ	0xFDF
  1307                           postinc2	equ	0xFDE
  1308                           postdec2	equ	0xFDD
  1309                           preinc2	equ	0xFDC
  1310                           plusw2	equ	0xFDB
  1311                           fsr2h	equ	0xFDA
  1312                           fsr2l	equ	0xFD9
  1313                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     11      31
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_pakIsl
    _pakIsl->_transmit_data

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     179
                               _init
                           _init_pwm
                          _init_vars
                      _konvertovanje
                             _pakIsl
 ---------------------------------------------------------------------------------
 (1) _pakIsl                                               7     7      0     105
                                              4 COMRAM     7     7      0
                      _transmit_data
 ---------------------------------------------------------------------------------
 (2) _transmit_data                                        1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _konvertovanje                                        5     3      2      29
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_vars                                            2     2      0      45
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _UART_Init
   _init_pwm
   _init_vars
   _konvertovanje
   _pakIsl
     _transmit_data

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3967      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK15          128      0       0      0.0%
BANK15             128      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     11      31     24.6%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      31      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Aug  1 22:16:00 2025

                     l82 11D2                       l91 115C                       l85 1146  
                     l94 1180                       l79 11B8                       l88 1212  
                     l97 11F0                       u10 11FE                       u11 11FA  
                     u20 11B4                       u21 11B0                       u40 110A  
                     u41 1106                       bsr 0FE0                      l100 11FE  
                    l105 110A                      l117 1034                      l801 11BA  
                    l811 11C8                      l803 11BE                      l813 11CA  
                    l805 11C2                      l815 11CC                      l807 11C4  
                    l831 11B4                      l809 11C6                      l841 1142  
                    l833 110C                      l825 118A                      l921 115A  
                    l817 11EC                      l835 1110                      l843 1200  
                    l827 1194                      l819 1182                      l923 116A  
                    l931 100A                      l837 111E                      l845 1210  
                    l829 1198                      l917 114A                      l861 10A8  
                    l941 1046                      l933 100E                      l839 1140  
                    l919 1154                      l871 10D4                      l863 10B4  
                    l951 107E                      l943 1056                      l935 101E  
                    l927 1002                      l865 10BC                      l857 1098  
                    l953 108C                      l945 105E                      l937 102E  
                    l929 1006                      l875 10DC                      l867 10BE  
                    l859 10A0                      l947 106E                      l939 1036  
                    l877 10EA                      l869 10C6                      l949 1070  
                    l879 10EE                      u120 116A                      u121 1166  
                    u130 101E                      u131 101A                      u140 102E  
                    u141 102A                      u150 1046                      u151 1042  
                    u160 1056                      u161 1052                      u170 106E  
                    u171 106A                      _PR2 0FCB                      u187 1156  
                    _ISR 0018                      wreg 0FE8                     ?_ISR 0015  
                   _PIE1 0F9D                     _main 1002                     _init 110C  
                   fsr2h 0FDA                     indf2 0FDF                     fsr2l 0FD9  
                   btemp 0020                     start 0060             ___param_bank 0000  
                  ??_ISR 0015                    ?_main 0015                    ?_init 0015  
                  _T0CON 0FD5                    _T2CON 0FCA                    i1l111 0050  
                  i1l881 0026                    i1l883 0034                    i1l885 0042  
                  i1l887 0044                    _RCSTA 0FAB                    _TMR0H 0FD7  
                  _TMR0L 0FD6                    _SPBRG 0FAF                    _PORTA 0F80  
                  _PORTB 0F81                    _PORTC 0F82            _transmit_data 11EA  
                  _TRISA 0F92                    _TRISB 0F93                    _TRISC 0F94  
                  _TXREG 0FAD                    _ByteX 0001                    ttemp5 0021  
                  ttemp6 0024                    ttemp7 0028                    status 0FD8  
                  wtemp8 0021          __initialization 11D4             __end_of_main 1098  
           __end_of_init 1148                   ??_main 0020                   ??_init 0018  
          __activetblptr 0000           ?_transmit_data 0015    __end_of_konvertovanje 1182  
                 _ADCON0 0FC2                   _ADCON1 0FC1                   _ADCON2 0FC0  
                 _ADRESH 0FC4                   _ADRESL 0FC3                   _CCPR2L 0FBB  
                 _INTCON 0FF2                   i1u5_20 0034                   i1u5_21 0030  
                 i1u6_20 0042                   i1u6_21 003E        __end_of_UART_Init 11D4  
                 _pakIsl 1098         __end_of_init_pwm 1214                   clear_0 11DA  
                 isa$std 0001             __mediumconst 1000               __accesstop 0080  
__end_of__initialization 11E0            ___rparam_used 0001           __pcstackCOMRAM 0015  
        ??_transmit_data 0018                  ?_pakIsl 0015                  _CCP2CON 0FBA  
                _INTCON2 0FF1       konvertovanje@kanal 001C                ?_init_pwm 0015  
                __Hparam 0000                  __Lparam 0000             __psmallconst 1000  
                __pcinit 11D4                  __ramtop 1000     transmit_data@data_8b 0018  
                __ptext0 1002                  __ptext1 1098                  __ptext2 11EA  
                __ptext3 1148                  __ptext4 1182                  __ptext5 1200  
                __ptext6 110C                  __ptext7 11BA        __end_of_init_vars 11BA  
                pakIsl@i 001E     end_of_initialization 11E0               ??_init_pwm 0018  
                postinc0 0FEE               _result_ECG 0011                _UART_Init 11BA  
              _PORTBbits 0F81                _TRISBbits 0F93                _TRISCbits 0F94  
              _TXSTAbits 0FAC               pakIsl@Resp 001C              _BAUDCONbits 0FB8  
             ?_UART_Init 0015           __end_of_pakIsl 110C      start_initialization 11D4  
            __end_of_ISR 0060                 ??_pakIsl 0019               init_vars@i 0018  
  __end_of_transmit_data 1200              __pbssCOMRAM 0001            _konvertovanje 1148  
            __pintcodelo 0018              ??_UART_Init 0018              __smallconst 1000  
         ?_konvertovanje 0018                _init_vars 1182               _ADCON0bits 0FC2  
               _Flag_4ms 0014               ?_init_vars 0015                 __Hrparam 0000  
               __Lrparam 0000          ??_konvertovanje 001A                 _cntTimer 0013  
               _init_pwm 1200                 isa$xinst 0000                 int$flags 0020  
               pakIsl@D1 001A               _INTCONbits 0FF2              ??_init_vars 0018  
               intlevel1 0000              _result_RESP 000F  
